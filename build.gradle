buildscript {

    ext.kotlin_version = '1.1.60'
    ext.dokka_version = "0.9.15"
    ext.springboot_version = '2.0.0.M6'

    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://dl.bintray.com/kotlin/kotlin-dev/" }
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        // plugins for documenting of kotlin source code
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springboot_version}")
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.0"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: "kotlin-allopen"
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'

group = 'com.greatdreams.kotlin'
version = '0.0.1'

mainClassName = 'com.greatdreams.kotlin.template.Application'

defaultTasks 'run'

repositories {
    mavenCentral()
    maven { url "http://jcenter.bintray.com/"}
    maven { url "http://dl.bintray.com/jetbrains/spek" }
    maven { url "https://dl.bintray.com/kotlin/kotlin-dev/" }
    maven { url "https://repo.spring.io/libs-milestone" }
    maven { url "http://repo.spring.io/snapshot" }

}

def spekVersion = '1.1.5'
def kluentVersion = '1.15'
def harmkrest = '1.4.0.0'
def winterbVersion = '0.5.0'
def slf4jVersion = '1.7.25'
def logbackVersion = "1.2.3"
def groovyVersion = "2.4.12"

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    compile "org.slf4j:slf4j-api:${slf4jVersion}"
    compile "ch.qos.logback:logback-core:$logbackVersion"
    compile "ch.qos.logback:logback-classic:$logbackVersion"
    compile "ch.qos.logback:logback-access:$logbackVersion"
    compile "org.codehaus.groovy:groovy-all:$groovyVersion"

    compile("org.springframework.boot:spring-boot-starter")

    testCompile("org.springframework.boot:spring-boot-starter-test")

    testCompile("org.jetbrains.spek:spek-api:$spekVersion") {
        exclude group: 'org.jetbrains.kotlin'
    }
    testCompile ("org.jetbrains.spek:spek-junit-platform-engine:$spekVersion") {
        exclude group: 'org.junit.platform'
        exclude group: 'org.jetbrains.kotlin'
    }
    testCompile 'org.junit.platform:junit-platform-console:1.0.1'
    testCompile "org.amshove.kluent:kluent:$kluentVersion"
    testCompile "com.natpryce:hamkrest:$harmkrest"
    testCompile "com.winterbe:expekt:${winterbVersion}"

}

allOpen {
    // annotation("com.my.Annotation")
    // annotations("com.another.Annotation", "com.third.Annotation")
}

task wrapper(type: Wrapper) {
    gradleVersion = "4.3.1"
}


junitPlatform {
    filters {
        engines { include 'spek' }
    }
}

test {
    reports {
        junitXml.enabled = false
        html.enabled = true
    }
}

// dokka configuration
dokka {
    moduleName = "spring boot starter with kotlin"
    outputFormat = 'html' //javadoc
    outputDirectory = "$buildDir/apidoc"
    processConfigurations = ['compile']
    includes = []
    samples = []

    linkMapping {
        dir = 'src/main/kotlin'
        url = 'https://github.com/cy6erGn0m/vertx3-lang-kotlin/blob/master/src/main/kotlin'
        suffix = '#L'
    }
    sourceDirs = files('src/main/kotlin')
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': 'com.greatdreams.kotlin.template.MainClass'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}